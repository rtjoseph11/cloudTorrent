#!/usr/bin/env node

var argv = require('optimist')
          .usage('use ntorrent config with -d/-p/-s to set app configuration \nuse ntorrent [pathtoTorrentFile] to start a download')
          .alias('d', 'downloadpath')
          .describe('d', 'set downloadpath (e.g /Users/yourname/Downloads/) must end in a /')
          .alias('p', 'port')
          .describe('p', 'set port (default is 6881)')
          .alias('s', 'seed')
          .describe('s', 'set seed (true | false) default is true')
          .argv;
var app = require('../lib/client');
var fs = require('fs');
var config = JSON.parse(fs.readFileSync('../lib/config.txt'));
if (argv._[0] === 'config'){
  config.port = argv.p ? argv.p : config.port;
  config.downloadpath = argv.d ? argv.d : config.downloadpath;
  config.seed = argv.s ? argv.s : config.seed;
  fs.writeFileSync(__dirname + '/../lib/config.txt', JSON.stringify(config));
} else if (!config.downloadpath){
  console.log('must set downloadpath using ntorrent config -d [yourdownloadpath]');
} else if (!fs.existsSync(config.downloadpath)){
  console.log('your downloadpath ' + config.downloadpath + 'does not exist');
} else if(!config.port){
  console.log('must set the port the app will listen on');
} else {
  if(argv._[0] !== 'test'){
    app.init(argv._[0]);
  } else if (argv._[0] === 'test'){
    app.testInit(__dirname + '/../test.torrent', process.argv[process.argv.length - 2].split('.'), process.argv[process.argv.length - 1]);
  }
}

